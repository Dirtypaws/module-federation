openapi: 3.0.0
info:
  title: module-federation/core
  contact:
    email: matthewkrizanac@gmail.com
  license:
    name: MIT
  version: 1.0.0
servers:
  - url: http://localhost:5227
paths:
  /app:
    get:
      tags:
        - App
      summary: Current application Manifest
      description: Fetches the current application manifest
      operationId: Get
      responses:
        '200':
          description: The application manifest has been retrieved, the body will contain the current application manifest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManifestDto'
    post:
      tags:
        - App
      summary: Adds a new entry to the application manifest
      description: Registers a new application in the application manifest
      operationId: Create
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAppRegistrationDto'
      responses:
        '200':
            description: The application has been registered and is now being served in the app manifest
  /app/{application}:
    get:
      tags:
        - App
      summary: Current application Manifest
      description: Fetches the specified application manifest
      operationId: GetByName
      parameters:
        - name: application
          in: path
          description: The name of an App
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The application manifest definition has been retrieved for the specified application, the body will contain the current application manifest definition
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppRegistrationDto'
components:
  schemas:
    ManifestDto:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/AppRegistrationDto'
    NavigationDto:
      additionalProperties: false
      type: object
      required:
        - path
        - display
      properties:
        path:
          type: string
        display:
          type: string
    AppRegistrationType:
      type: string
      enum:
        - module
        - componenet
    AppRegistrationDto:
      additionalProperties: false
      type: object
      required:
        - remoteEntry
        - type
        - id
        - ngModuleName
        - exposedModule
        - displayName
        - routePath
        - version
        - navigationRoutes
      properties:
        remoteEntry:
          type: string
        type:
          $ref: '#/components/schemas/AppRegistrationType'
        id:
          type: string
        ngModuleName:
          type: string
        exposedModule:
          type: string
        displayName:
          type: string
        routePath:
          type: string
        version:
          type: string
        navigationRoutes:
          type: array
          items:
            $ref: '#/components/schemas/NavigationDto'
    CreateAppRegistrationDto:
      additionalProperties: false
      type: object
      required:
        - remoteEntry
        - type
        - ngModuleName
        - exposedModule
        - displayName
        - routePath
        - version
        - navigationRoutes
      properties:
        remoteEntry:
          type: string
        type:
          $ref: '#/components/schemas/AppRegistrationType'
        ngModuleName:
          type: string
        exposedModule:
          type: string
        displayName:
          type: string
        routePath:
          type: string
        version:
          type: string
        navigationRoutes:
          type: array
          items:
            $ref: '#/components/schemas/NavigationDto'
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
